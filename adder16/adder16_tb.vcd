$date
	Thu Jul 10 20:51:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder16_tb $end
$var wire 16 ! z [15:0] $end
$var wire 1 " carry $end
$var reg 16 # x [15:0] $end
$var reg 16 $ y [15:0] $end
$scope module dut $end
$var wire 16 % x [15:0] $end
$var wire 16 & y [15:0] $end
$var wire 16 ' z [15:0] $end
$var wire 1 " carry $end
$scope module a0 $end
$var wire 4 ( a [3:0] $end
$var wire 4 ) b [3:0] $end
$var wire 1 * cin $end
$var wire 4 + s [3:0] $end
$var wire 1 , cout $end
$var wire 1 - c3 $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$scope module fa0 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 * cin $end
$var wire 1 / cout $end
$var wire 1 2 sum $end
$var wire 1 3 t1 $end
$var wire 1 4 t2 $end
$var wire 1 5 t3 $end
$upscope $end
$scope module fa1 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 / cin $end
$var wire 1 . cout $end
$var wire 1 8 sum $end
$var wire 1 9 t1 $end
$var wire 1 : t2 $end
$var wire 1 ; t3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 . cin $end
$var wire 1 - cout $end
$var wire 1 > sum $end
$var wire 1 ? t1 $end
$var wire 1 @ t2 $end
$var wire 1 A t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 - cin $end
$var wire 1 , cout $end
$var wire 1 D sum $end
$var wire 1 E t1 $end
$var wire 1 F t2 $end
$var wire 1 G t3 $end
$upscope $end
$upscope $end
$scope module a1 $end
$var wire 4 H a [3:0] $end
$var wire 4 I b [3:0] $end
$var wire 1 , cin $end
$var wire 4 J s [3:0] $end
$var wire 1 K cout $end
$var wire 1 L c3 $end
$var wire 1 M c2 $end
$var wire 1 N c1 $end
$scope module fa0 $end
$var wire 1 O a $end
$var wire 1 P b $end
$var wire 1 , cin $end
$var wire 1 N cout $end
$var wire 1 Q sum $end
$var wire 1 R t1 $end
$var wire 1 S t2 $end
$var wire 1 T t3 $end
$upscope $end
$scope module fa1 $end
$var wire 1 U a $end
$var wire 1 V b $end
$var wire 1 N cin $end
$var wire 1 M cout $end
$var wire 1 W sum $end
$var wire 1 X t1 $end
$var wire 1 Y t2 $end
$var wire 1 Z t3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 M cin $end
$var wire 1 L cout $end
$var wire 1 ] sum $end
$var wire 1 ^ t1 $end
$var wire 1 _ t2 $end
$var wire 1 ` t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 a a $end
$var wire 1 b b $end
$var wire 1 L cin $end
$var wire 1 K cout $end
$var wire 1 c sum $end
$var wire 1 d t1 $end
$var wire 1 e t2 $end
$var wire 1 f t3 $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 4 g a [3:0] $end
$var wire 4 h b [3:0] $end
$var wire 1 K cin $end
$var wire 4 i s [3:0] $end
$var wire 1 j cout $end
$var wire 1 k c3 $end
$var wire 1 l c2 $end
$var wire 1 m c1 $end
$scope module fa0 $end
$var wire 1 n a $end
$var wire 1 o b $end
$var wire 1 K cin $end
$var wire 1 m cout $end
$var wire 1 p sum $end
$var wire 1 q t1 $end
$var wire 1 r t2 $end
$var wire 1 s t3 $end
$upscope $end
$scope module fa1 $end
$var wire 1 t a $end
$var wire 1 u b $end
$var wire 1 m cin $end
$var wire 1 l cout $end
$var wire 1 v sum $end
$var wire 1 w t1 $end
$var wire 1 x t2 $end
$var wire 1 y t3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 z a $end
$var wire 1 { b $end
$var wire 1 l cin $end
$var wire 1 k cout $end
$var wire 1 | sum $end
$var wire 1 } t1 $end
$var wire 1 ~ t2 $end
$var wire 1 !" t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 "" a $end
$var wire 1 #" b $end
$var wire 1 k cin $end
$var wire 1 j cout $end
$var wire 1 $" sum $end
$var wire 1 %" t1 $end
$var wire 1 &" t2 $end
$var wire 1 '" t3 $end
$upscope $end
$upscope $end
$scope module a3 $end
$var wire 4 (" a [3:0] $end
$var wire 4 )" b [3:0] $end
$var wire 1 j cin $end
$var wire 4 *" s [3:0] $end
$var wire 1 " cout $end
$var wire 1 +" c3 $end
$var wire 1 ," c2 $end
$var wire 1 -" c1 $end
$scope module fa0 $end
$var wire 1 ." a $end
$var wire 1 /" b $end
$var wire 1 j cin $end
$var wire 1 -" cout $end
$var wire 1 0" sum $end
$var wire 1 1" t1 $end
$var wire 1 2" t2 $end
$var wire 1 3" t3 $end
$upscope $end
$scope module fa1 $end
$var wire 1 4" a $end
$var wire 1 5" b $end
$var wire 1 -" cin $end
$var wire 1 ," cout $end
$var wire 1 6" sum $end
$var wire 1 7" t1 $end
$var wire 1 8" t2 $end
$var wire 1 9" t3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 :" a $end
$var wire 1 ;" b $end
$var wire 1 ," cin $end
$var wire 1 +" cout $end
$var wire 1 <" sum $end
$var wire 1 =" t1 $end
$var wire 1 >" t2 $end
$var wire 1 ?" t3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 @" a $end
$var wire 1 A" b $end
$var wire 1 +" cin $end
$var wire 1 " cout $end
$var wire 1 B" sum $end
$var wire 1 C" t1 $end
$var wire 1 D" t2 $end
$var wire 1 E" t3 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xE"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
bx *"
bx )"
bx ("
x'"
x&"
x%"
x$"
x#"
x""
x!"
x~
x}
x|
x{
xz
xy
xx
xw
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
bx i
bx h
bx g
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
bx J
bx I
bx H
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
05
x4
x3
x2
x1
x0
x/
x.
x-
x,
bx +
0*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
x"
bx !
$end
#5
00"
0j
1$"
0'"
0k
1|
0!"
0l
1v
0y
0m
b1111 i
1p
0s
0K
1c
0f
0L
1]
0`
0M
1W
0Z
0N
b1111 J
1Q
0T
0,
1D
0G
0-
1>
0A
0.
06"
0<"
b0 *"
0B"
18
0;
0-"
0,"
0+"
b111111111111 !
b111111111111 '
b1111 +
12
0/
03"
09"
0?"
0E"
1"
13
04
19
0:
1?
0@
1E
0F
1R
0S
1X
0Y
1^
0_
1d
0e
1q
0r
1w
0x
1}
0~
1%"
0&"
01"
02"
07"
08"
0="
0>"
0C"
1D"
01
07
0=
0C
0P
0V
0\
0b
0o
0u
0{
0#"
0/"
05"
0;"
1A"
10
16
1<
1B
1O
1U
1[
1a
1n
1t
1z
1""
0."
04"
0:"
1@"
b0 )
b0 I
b0 h
b1000 )"
b1111 (
b1111 H
b1111 g
b1000 ("
b1000000000000000 $
b1000000000000000 &
b1000111111111111 #
b1000111111111111 %
#10
1E"
1+"
1?"
1,"
19"
1-"
13"
1j
0$"
1'"
1k
0|
1!"
1l
0v
1y
1m
b0 i
0p
1s
1K
0c
1f
1L
0]
1`
1M
0W
1Z
1N
b0 J
0Q
1T
1,
0D
1G
1-
0>
1A
08
1.
0B"
1"
b0 +
02
00"
06"
b0 !
b0 '
b0 *"
0<"
09
1:
1C"
0D"
03
11"
17"
1="
17
0A"
00
1."
14"
1:"
b10 )
b0 )"
b1110 (
b1111 ("
b10 $
b10 &
b1111111111111110 #
b1111111111111110 %
#15
0"
1B"
0E"
0+"
1<"
0?"
0,"
16"
09"
0-"
b1111 *"
10"
03"
0j
1$"
0'"
0k
1|
0!"
0l
1v
0y
0m
b1111 i
1p
0s
0K
1c
0f
0L
1]
0`
0M
1W
0Z
0N
b1111 J
1Q
0T
0,
1D
0G
0-
1>
0A
12
b1111111111111111 !
b1111111111111111 '
b1111 +
18
0.
13
19
0:
11
07
1=
1P
1\
1o
1{
1/"
1;"
0<
0O
0[
0n
0z
0."
0:"
b101 )
b101 I
b101 h
b101 )"
b1010 (
b1010 H
b1010 g
b1010 ("
b101010101010101 $
b101010101010101 &
b1010101010101010 #
b1010101010101010 %
#20
